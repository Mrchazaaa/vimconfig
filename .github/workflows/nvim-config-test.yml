name: Test Neovim Configuration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-nvim-config:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        nvim-version: ['stable', 'nightly']

    steps:
    - uses: actions/checkout@v4
      with:
        path: vimconfig

    - name: Setup Neovim config directory
      run: |
        mkdir -p ~/.config/nvim
        mkdir -p ~/.local/share/nvim
        mkdir -p ~/.local/state/nvim
        mv vimconfig ~/.config/nvim/

    - name: Create init.vim bootstrap file
      run: |
        cat > ~/.config/nvim/init.vim << 'EOF'
source ~/.config/nvim/vimconfig/vim/.vimrc

lua dofile(vim.fn.stdpath('config') .. '/vimconfig/nvim/init.lua')
EOF

    - name: Install Neovim
      uses: rhysd/action-setup-vim@v1
      with:
        neovim: true
        version: ${{ matrix.nvim-version }}

    - name: Test basic Neovim startup
      run: |
        timeout 30 nvim --headless -c "lua print('Neovim started successfully')" -c "qall!" || exit 1

    - name: Verify custom config is loaded
      run: |
        timeout 30 nvim --headless -c "VerifyConfig" -c "qall!" 2>&1 | tee /tmp/verify-config-output.log
        grep "CONFIG_LOADED_SUCCESSFULLY" /tmp/verify-config-output.log || exit 1

    - name: Test configuration loading
      run: |
        timeout 30 nvim --headless -c "lua vim.cmd('checkhealth')" -c "qall!" || exit 1

    - name: Test plugin loading (if using lazy.nvim)
      run: |
        timeout 60 nvim --headless -c "lua require('lazy').sync({wait = true})" -c "qall!" || exit 1

    - name: Run syntax check on Lua files
      run: |
        find ~/.config/nvim -name "*.lua" -exec lua -e "loadfile('{}')()" \; || exit 1

    - name: Test specific functionality
      run: |
        timeout 30 nvim --headless -c "lua vim.print('Config test passed')" -c "qall!" || exit 1

    - name: Check for errors in log
      run: |
        if [ -f ~/.local/state/nvim/log ]; then
          if grep -i error ~/.local/state/nvim/log; then
            echo "Errors found in Neovim log"
            exit 1
          fi
        fi

    - name: Collect debug artifacts
      if: always()
      run: |
        mkdir -p /tmp/debug-artifacts
        cp ~/.config/nvim/init.vim /tmp/debug-artifacts/ || true
        cp /tmp/verify-config-output.log /tmp/debug-artifacts/ || true
        cp ~/.local/state/nvim/log /tmp/debug-artifacts/nvim.log || true
        ls -la ~/.config/nvim/ > /tmp/debug-artifacts/config-structure.txt || true
        nvim --version > /tmp/debug-artifacts/nvim-version.txt || true

    - name: Upload debug artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: debug-logs-${{ matrix.nvim-version }}
        path: /tmp/debug-artifacts/